library(modelr)
library(plotly)
library(naniar)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
final <- na.omit(dataset)
dim(dataset)
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
sum(is.na(dataset))
final <- na.omit(dataset)
dim(dataset)
sum(is.na(dataset))
mean(is.na(dataset))
dim(final)
load("~/DataScience/R/RealEstateSalePrices/.RData")
load("~/DataScience/R/RealEstateSalePrices/.RData")
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
library(naniar)
library(plotly)
library(modelr)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
#Handelling the missing Values
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
mean(is.na(dataset))
final <- na.omit(dataset)
dim(final)
final$newAge <- final %>%
mutate(`BUILDING AGE` = 2017 - `YEAR.BUILT`)
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
library(tidyverse)
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
#Handelling the missing Values
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
mean(is.na(dataset))
final <- na.omit(dataset)
dim(final)
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
install.packages("dplyr")
library(dplyr)
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
final$BOROUGH
levels(final$BOROUGH)
levels(final$BOROUGH)
levels(as.character(final$BOROUGH))
levels((final$BOROUGH))
levels(final$BOROUGH)
dim(final)
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
library(dplyr)
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
names(dataset)
levels(dataset$NEIGHBORHOOD)
names(dataset)
levels(dataset$ZIP.CODE)
levels(as.character(dataset$ZIP.CODE))
levels(as.factor(dataset$ZIP.CODE))
sum(levels(as.factor(dataset$ZIP.CODE)))
length(levels(as.factor(dataset$ZIP.CODE)))
packages<-c("tidyverse","data.table","lubridate","magrittr","formattable","knitr","modelr","plotly","naniar","dplyr")
install.packages(packages)
install.packages(packages)
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
library(dplyr)
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
names(dataset)
realestate <- as_tibble(dataset[,c(-1,-8)])
dc <- c(1,3,4,5,8,11,18,19)
realestate %<>% mutate_at(dc, funs(factor(.)))
levels(realestate$BOROUGH) <- c("Western New York",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
realestate$LAND.SQUARE.FEET<-gsub("-",NA,realestate$LAND.SQUARE.FEET)
realestate$GROSS.SQUARE.FEET<-gsub("-",NA,realestate$GROSS.SQUARE.FEET)
realestate$SALE.PRICE<-gsub("-",NA,realestate$LAND.SQUARE.FEET)
realestate$LAND.SQUARE.FEET[is.na(realestate$LAND.SQUARE.FEET)] = median(realestate$LAND.SQUARE.FEET,na.rm = TRUE)
realestate$GROSS.SQUARE.FEET[is.na(realestate$GROSS.SQUARE.FEET)] = median(realestate$GROSS.SQUARE.FEET,na.rm=TRUE)
print(is.na(realestate$SALE.PRICE))
sum(is.na(realestate$LAND.SQUARE.FEET))
sum(is.na(realestate$SALE.PRICE))
na.omit(realestate)
realestatedata<-na.omit(realestate)
dim(realestatedata)
dn<- c(15,16,17,20)
realestate %<>% mutate_at(dn, funs(as.numeric(.)))
dchr <- c(6,7)
realestate %<>% mutate_at(dchr, funs(as.character(.)))
realestate$"SALE.DATE" <- ymd(realestate$"SALE DATE")
dim(realestatedata)
x <- factor(realestatedata$BUILDING.CLASS.CATEGORY)
levels(x)
y <- factor(realestatedata$NEIGHBORHOOD)
levels(y)
z <- factor(realestatedata$BOROUGH)
levels(z)
library(formattable)
head(realestatedata, n = 50) %>%
formattable() %>%
as.datatable(options = list(dom = 't',scrollX = TRUE,scrollCollapse = TRUE))
names(realestatedata)
view(realestatedata)
dim(realestatedata)
class(realestatedata$BUILDING.CLASS.CATEGORY)
class(realestatedata$LAND.SQUARE.FEET)
View(realestatedata)
summary(realestatedata)
rrr<-data.frame(summary(realestatedata))
rrr
View(rrr)
reshape(rrr)
library(reshape2)
library(reshape)
install.packages("reshape")
library(reshape)
class(dataset$LAND.SQUARE.FEET)
class(as.numeric(dataset$LAND.SQUARE.FEET))
summary(as.numeric(dataset$LAND.SQUARE.FEET))
reshape::cast(data = rrr, id = c(BOROUGH,NEIGHBOURHOOD,BUILDING.CLASS.CATEGORY,TAX.CLASS.AT.PRESENT,BLOCK,LOT,ADRESS,ZIP.CODE,RESIDENTIAL.UNITS,COMMERCIAL.UNITS))
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
library(dplyr)
library(caret)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
mean(is.na(dataset))
final <- na.omit(dataset)
dim(final)
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
levels(dataset$BOROUGH) = c("Western New Yourk",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
#names(nyc_property)EVACALCULATIONS$NOPAT[is.na(EVACALCULATIONS$NOPAT)] = median(EVACALCULATIONS$NOPAT,na.rm = TRUE)
class(dataset$LAND.SQUARE.FEET[20])
dataset$LAND.SQUARE.FEET[is.na(as.numeric(dataset$LAND.SQUARE.FEET))] = median(as.numeric(dataset$LAND.SQUARE.FEET), na.rm =
TRUE)
dataset$GROSS.SQUARE.FEET[is.na(as.numeric(dataset$GROSS.SQUARE.FEET))] = median(as.numeric(dataset$GROSS.SQUARE.FEET), na.rm =
TRUE)
View(dataset)
fac <- c(1,3,4,5,8,11,18,19)
dataset %<>% mutate_at(fac, funs(factor(.)))
num <- c(15,16,17,20)
dataset %<>% mutate_at(num, funs(as.numeric(.)))
chr <- c(6,7)
dataset %<>% mutate_at(chr, funs(as.character(.)))
dataset$`SALE DATE` <- ymd(dataset$`SALE DATE`)
dataset$SALE.DATE <- ymd(dataset$SALE.DATE)
library("randomForest")
View(final)
is.na(dataset)
class(final$LAND.SQUARE.FEET[20])
final$LAND.SQUARE.FEET[is.na(as.numeric(final$LAND.SQUARE.FEET))] = median(as.numeric(final$LAND.SQUARE.FEET), na.rm =
TRUE)
final$GROSS.SQUARE.FEET[is.na(as.numeric(final$GROSS.SQUARE.FEET))] = median(as.numeric(final$GROSS.SQUARE.FEET), na.rm =
TRUE)
final %>% filter(duplicated(final) == TRUE) %>% nrow()
View(final)
fac <- c(1,3,4,5,8,11,18,19)
final %<>% mutate_at(fac, funs(factor(.)))
num <- c(15,16,17,20)
final %<>% mutate_at(num, funs(as.numeric(.)))
chr <- c(6,7)
final %<>% mutate_at(chr, funs(as.character(.)))
final$SALE.DATE <- ymd(final$SALE.DATE)
final %<>% mutate_at(num, funs(as.numeric(.)))
final %<>% mutate_at(chr, funs(as.character(.)))
final$`SALE DATE`<- ymd(final$`SALE DATE`)
View(final)
fac <- c(1,3,4,5,8,11,18,19)
final %<>% mutate_at(fac, funs(factor(.)))
num <- c(15,16,17,20)
final %<>% mutate_at(num, funs(as.numeric(.)))
chr <- c(6,7)
final %<>% mutate_at(chr, funs(as.character(.)))
final$`SALE DATE`<- ymd(final$`SALE DATE`)
str(final)
is.na(final$`SALE DATE`)
sum(is.na(final$`SALE DATE`))
length(final$`SALE DATE`)-sum(is.na(final$`SALE DATE`))
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.7, list = FALSE)
set.seed(3033)
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.7, list = FALSE)
training <- final[inTrain,]
testing <- final[-inTrain,]
dim(training)
dim(testing)
anyNA(final)
summary(final)
training[["SALE.PRICE"]] = factor(training[["SALE.PRICE"]])
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svmLinear <-train(SALE.PRICE ~ ., data = training, method = "svmLinear",
trControl =trctrl,
preProcess= c("center","scale"),
tuneLength = 10)
anyNA(final$SALE.PRICE)
svmLinear <-train(as.factor(SALE.PRICE) ~ ., data = training, method = "svmLinear",
trControl =trctrl,
preProcess= c("center","scale"),
tuneLength = 10)
names(final$SALE.PRICE)
names(final)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
#Handelling the missing Values
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
mean(is.na(dataset))
final <- na.omit(dataset)
dim(final)
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
final$`BUILDING CLASS CATEGORY NUMBER`
anyNA(final$`SALE DATE`)
anyNA(final$TIME)
summary(final)
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
View(final)
levels(dataset$BOROUGH)
levels(fianl$BOROUGH)
levels(final$BOROUGH)
levels(final$BOROUGH) = c("Western New Yourk",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
#names(nyc_property)EVACALCULATIONS$NOPAT[is.na(EVACALCULATIONS$NOPAT)] = median(EVACALCULATIONS$NOPAT,na.rm = TRUE)
#class(final$LAND.SQUARE.FEET[20])
final$LAND.SQUARE.FEET[is.na(as.numeric(final$LAND.SQUARE.FEET))] = median(as.numeric(final$LAND.SQUARE.FEET), na.rm =
TRUE)
final$GROSS.SQUARE.FEET[is.na(as.numeric(final$GROSS.SQUARE.FEET))] = median(as.numeric(final$GROSS.SQUARE.FEET), na.rm =
TRUE)
final %>% filter(duplicated(final) == TRUE) %>% nrow()
fac <- c(1,3,4,5,8,11,18,19)
final %<>% mutate_at(fac, funs(factor(.)))
num <- c(15,16,17,20)
final %<>% mutate_at(num, funs(as.numeric(.)))
chr <- c(6,7)
final %<>% mutate_at(chr, funs(as.character(.)))
final$`SALE DATE`<- ymd(final$`SALE DATE`)
# library("randomForest")
# saleNA%<>%mutate_at(fac, funs(na.omit(dataset)))#  na.omit(dataset$SALE.PRICE)
# rf <-randomForest(SALE.PRICE~.,data=saleNA, ntree=500)
set.seed(3033)
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.7, list = FALSE)
training <- final[inTrain,]
testing <- final[-inTrain,]
dim(training)
dim(testing)
anyNA(final)#it return's TRUE, if there exists any NA's and returned TRUE
remove_these<-c(-1,-8,-19,-20)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
View(final)
anyNA(final)#it return's TRUE, if there exists any NA's and returned TRUE
summary(final)# this gives aggregate function on each column and NA's if exists
training[["SALE.PRICE"]] = factor(training[["SALE.PRICE"]])
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svmLinear <-train(as.factor(SALE.PRICE) ~ ., data = training, method = "svmLinear",
trControl =trctrl,
preProcess= c("center","scale"),
tuneLength = 10)
anyNA(final)#it return's TRUE, if there exists any NA's and returned TRUE
summary(final)# this gives aggregate function on each column and NA's if exists
#training$SALE.PRICE
training[["SALE.PRICE"]] = factor(training[["SALE.PRICE"]])
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svmLinear <-train(as.numeric(SALE.PRICE) ~ ., data = training, method = "svmLinear",
trControl =trctrl,
preProcess= c("center","scale"),
tuneLength = 10)
is.numeric(final$SALE.PRICE)
levels(final$SALE.PRICE)
sum(final$SALE.PRICE==0)
?gsub
library(stringr)
str_split(final$SALE.PRICE, L)
training[["SALE.PRICE"]] = factor(training[["SALE.PRICE"]])
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svmLinear <-train(as.numeric(SALE.PRICE) ~ ., data = training, method = "svmLinear",
trControl =trctrl,
preProcess= c("center","scale"),
tuneLength = 10)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.1, list = FALSE)
summary(tenPercent)
length(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.09, list = FALSE)
length(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.01, list = FALSE)
length(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.009, list = FALSE)
length(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.001, list = FALSE)
length(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.0001, list = FALSE)
length(tenPercent)
str(final)
install.packages("ggmap")
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.1, list = FALSE)
tenTenPercent <- createDataPartition(y = tenPercent$SALE.PRICE, p = 0.1, list = FALSE)
str(final)
?createDataPartition
rm(list=ls())
library(Amelia)
library(tidyverse)
library(data.table)
library(tidyverse)
library(lubridate)
library(magrittr)
library(formattable)
library(knitr)
library(modelr)
library(plotly)
library(naniar)
library(dplyr)
library(caret)
#Loading the data in to a variable
dataset = read.csv("data.csv",sep = ",",stringsAsFactors = TRUE)
dim(dataset)
#Handelling the missing Values
dataset$LAND.SQUARE.FEET<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
dataset$GROSS.SQUARE.FEET<-gsub("-",NA,dataset$GROSS.SQUARE.FEET)
dataset$SALE.PRICE<-gsub("-",NA,dataset$LAND.SQUARE.FEET)
mean(is.na(dataset))
final <- na.omit(dataset)
dim(final)
final <- final %>%
separate(col = "BUILDING.CLASS.CATEGORY", into = c("BUILDING CLASS CATEGORY NUMBER",
"BUILDING CLASS CATEGORY"), sep = 3) %>%
separate(col = "SALE.DATE", into = c("SALE DATE", "TIME"), sep = " ")
remove_these<-c(-1,-8)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
View(final)
levels(final$BOROUGH)
str(final)
as.factor(final$BOROUGH)
levels(as.factor(final$BOROUGH)) = c("Western New Yourk",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
as.factor(final$BOROUGH)
#dataset
levels(as.factor(as.character(final$BOROUGH))) = c("Western New Yourk",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
as.factor(final$BOROUGH)
#names(nyc_property)EVACALCULATIONS$NOPAT[is.na(EVACALCULATIONS$NOPAT)] = median(EVACALCULATIONS$NOPAT,na.rm = TRUE)
#class(final$LAND.SQUARE.FEET[20])
final$LAND.SQUARE.FEET[is.na(as.numeric(final$LAND.SQUARE.FEET))] = median(as.numeric(final$LAND.SQUARE.FEET), na.rm =
TRUE)
final$GROSS.SQUARE.FEET[is.na(as.numeric(final$GROSS.SQUARE.FEET))] = median(as.numeric(final$GROSS.SQUARE.FEET), na.rm =
TRUE)
#View(final)
fac <- c(1,3,4,5,8,11,18,19)
final %<>% mutate_at(fac, funs(factor(.)))
levels(final$BOROUGH) = c("Western New Yourk",
"Finger Lakes",
"Southern Tire",
"Central New York",
"North Country")
num <- c(15,16,17,20)
final %<>% mutate_at(num, funs(as.numeric(.)))
chr <- c(6,7)
final %<>% mutate_at(chr, funs(as.character(.)))
anyNA(final)
anyNA(final$BOROUGH)
anyNA(final$NEIGHBORHOOD)
anyNA(final$`SALE DATE`)
anyNA(final$YEAR.BUILT)
anyNA(final$TIME)
sum(is.na(final$TIME))
remove_these<-c(-20)#SerialNo.s,Ease-̥Ment,
final <-as_tibble(final[,remove_these])
anyNA(final$TIME)
anyNA(final)
dim(tenPercent)
tenPercent <- createDataPartition(y = final$SALE.PRICE, p = 0.1, list = FALSE)
dim(tenPercent)
dim(final)
inTrain <- createDataPartition(y = final, p = 0.1, list = FALSE)
inTrain <- createDataPartition(y = final, p = 0.1)
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.1)
dim(inTrain)
dim(final)
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.1,list = FALSE)
dim(inTrain)
inTrain <- createDataPartition(y = final$SALE.PRICE, p = 0.01,list = FALSE)
dim(inTrain)
dim(final)
#final$`SALE DATE`<- ymd(final$`SALE DATE`)
# library("randomForest")
# saleNA%<>%mutate_at(fac, funs(na.omit(dataset)))#  na.omit(dataset$SALE.PRICE)
# rf <-randomForest(SALE.PRICE~.,data=saleNA, ntree=500)
final2<-data.frame(final$BOROUGH,final$LAND.SQUARE.FEET,final$GROSS.SQUARE.FEET,final$YEAR.BUILT,final$RESIDENTIAL.UNITS,final$COMMERCIAL.UNITS,final$TOTAL.UNITS,final$YEAR.BUILT,final$SALE.PRICE)
din=m(final)
dim(final)
dim(final2)
str(final2)
str(final2)
dim(final2)
anyNA(final2)
